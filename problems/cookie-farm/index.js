var fs = require('fs')
var path = require('path')
var verify = require('adventure-verify')
var Kefir = require('kefir')

var sensorA_readings = [4,29,48,59,92,36,61,96,25,41,48,93,70,99,26,23,69,36,70,11,69,55,41,65,20,81,93,96,39,60,5,10,18,23,67,14,18,82,76,80,23,22,55,25,28,87,74,22,18,19,47,84,62,61,61,88,28,47,76,47,85,45,33,54,86,41,77,33,56,50,97,61,12,79,41,33,10,84,74,98,13,67,79,16,87,30,17,4,27,90,77,79,83,66,46,50,34,72,6,93,55,50,17,77,81,12,96,45,50,16,73,9,60,1,77,38,30,23,63,40,79,11,52,97,21,98,31,26,31,21,47,48,7,14,21,64,10,8,20,37,18,27,81,13,80,39,28,53,13,14,88,58,23,33,57,9,74,27,5,1,74,39,5,26,69,7,44,65,66,10,88,59,66,43,27,93,33,42,100,14,6,67,95,64,10,98,44,84,24,45,79,33,53,81,92,74,11,88,73,91,28,65,2,43,3,97,60,86,85,81,84,29,4,86,6,92,9,9,67,11,75,7,4,93,56,5,37,32,63,70,81,20,62,42,72,21,30,67,99,1,60,62,19,40,81,9,49,68,37,87,5,82,81,13,91,74,92,11,88,29,35,63,49,24,57,43,56,30,56,21,7,68,95,67,57,5,88,77,11,94,55,67,99,38,78,46,62,88,23,6,77,27,89,78,86,49,18,24,67,96,81,79,7,88,5,6,81,63,98,3,93,25,16,17,72,43,7,16,38,43,65,96,59,92,69,34,76,59,22,48,47,12,90,93,6,13,48,61,4,45,67,69,89,14,45,8,19,3,56,56,64,21,71,44,40,83,26,92,26,18,65,27,37,15,43,57,16,64,81,100,19,90,91,18,22,92,80,77,12,31,46,26,82,17,25,38,48,25,61,71,6,37,64,6,75,70,72,77,98,76,35,42,91,59,61,54,25,46,10,47,45,9,3,83,36,13,91,27,4,34,84,90,64,17,51,4,87,71,37,20,62,26,59,34,90,60,75,35,9,42,94,80,48,10,88,2,95,25,80,47,10,97,73,61,24,1,23,97,60,41,18,98,34,24,51,70,47,53,6,12,4,75,12,29,57,9,20,17,75,22,56,36,56,33,58,68,42,31,86,75,12,66,99,56,39,34,48,5,79,96,66,71,66,79,47,62,45,12,24,40,10,78,1,66,57,52,83,72,7,30,76,51,56,48,12,82,30,47,70,29,27,26,33,13,92,22,80,30,59,85,66,59,7,68,40,90,16,77,76,24,51,79,100,52,93,29,37,5,27,82,12,20,77,78,33,36,81,87,68,29,31,1,2,46,22,65,61,81,51,25,81,28,22,56,11,4,63,8,67,43,40,60,21,72,37,45,40,99,14,36,17,38,13,42,4,5,23,16,6,18,40,47,37,52,72,9,23,59,100,42,40,83,19,91,52,13,65,73,40,38,85,9,8,22,65,96,67,19,63,39,7,69,35,99,53,24,14,75,60,70,34,77,7,71,91,29,53,97,62,92,62,81,73,39,42,95,66,39,27,6,83,8,71,20,26,32,63,9,23,9,2,18,69,43,20,26,17,79,31,58,22,9,68,42,9,99,30,87,89,71,97,77,26,27,75,96,78,82,84,81,15,95,45,32,60,54,3,37,59,24,36,74,14,40,38,73,71,74,47,67,62,35,52,45,65,80,98,28,97,48,51,8,3,7,58,20,87,51,83,3,26,5,36,38,18,24,45,65,88,17,77,89,35,69,86,17,96,85,85,97,83,29,51,90,65,83,100,57,21,68,32,42,45,43,26,11,42,74,16,41,60,1,88,35,74,98,84,4,78,4,6,51,20,10,20,87,95,55,47,19,92,88,98,69,87,61,37,16,23,42,44,43,41,83,8,77,12,21,50,33,87,56,28,39,91,84,82,23,60,8,50,49,50,62,89,50,36,40,2,6,79,97,45,84,13,77,51,58,7,56,22,18,98,77,52,37,70,80,39,10,26,95,21,81,12,58,13,56,35,72,41,2,27,91,10,17,14,74,44,59,10,74,54,60,7,87,45,70,100,80,64,23,17,94,12,49,1,38,40,56,63,37,97,27,14,91,78,83,4,80,69,13,66,94,22,20,33,22,47,64,31,12,11,69,75,95,67,86,28,50,37,18,68,82,34,50,6,43,56,30,57,100,38,88,68,55,89,78,32,36,8,10,24,22,10,78,85,58,83,55,86,8,61,40,32,20,50,10,50,5,98,62,76,51,7,86,12,18,80,33,62,71,17,45,67,94,51,95,26,79,9,4,53,1,61,86,1,84,3,53,74,21,7,40,14,26,56,11,44,81,100,84,51,36]
var sensorB_readings = [68,17,48,86,1,66,92,98,65,76,35,28,72,16,20,56,78,54,68,72,4,48,2,97,53,82,18,9,45,71,86,13,61,27,59,90,61,75,58,54,27,58,55,39,67,37,26,53,25,55,20,89,54,56,100,84,84,55,33,1,95,76,20,10,17,42,94,29,6,73,85,30,18,22,87,56,71,72,43,89,81,37,92,1,49,56,16,7,77,84,60,12,4,43,87,28,95,50,65,13,76,59,92,78,97,95,86,38,86,40,82,39,97,92,44,28,7,1,91,22,83,6,91,82,2,70,79,95,25,20,33,27,91,36,42,19,92,24,40,23,74,12,33,63,55,80,7,32,5,11,68,54,86,97,89,78,55,43,28,87,43,64,78,16,27,66,18,64,3,60,75,9,90,77,57,35,24,50,51,44,95,13,77,57,55,98,79,11,47,83,71,98,46,8,46,80,85,16,22,76,91,55,19,4,38,60,89,18,75,48,100,2,1,48,77,78,8,79,45,45,81,12,28,76,51,98,72,38,90,87,78,4,94,90,6,10,71,62,45,73,5,9,48,92,82,93,96,64,42,17,44,1,7,5,74,34,56,35,24,99,10,79,9,31,56,53,13,40,97,87,68,87,71,74,75,45,99,49,88,38,27,8,90,68,28,3,7,54,98,23,94,86,92,14,78,81,67,58,86,8,53,35,26,3,77,59,47,50,27,39,10,27,11,90,2,36,16,13,57,12,62,41,100,97,43,77,45,63,48,33,65,57,20,54,82,65,59,93,21,88,73,89,95,24,60,15,81,29,38,90,3,93,35,98,81,55,27,41,96,38,98,4,51,29,83,33,71,86,50,49,74,100,65,76,71,16,49,92,41,79,17,49,92,19,28,50,54,85,11,75,29,53,13,50,70,20,31,10,85,8,29,4,95,24,33,4,81,85,31,32,64,85,18,63,77,85,24,69,28,32,79,20,77,38,37,11,98,88,93,22,44,86,53,26,46,50,33,58,30,32,60,3,75,48,59,99,31,98,74,23,39,59,39,17,24,71,85,39,65,54,43,45,67,78,73,97,67,62,28,14,100,85,99,51,91,73,29,30,46,5,68,14,79,38,36,8,8,43,43,40,74,7,99,73,55,57,40,56,100,48,54,52,23,43,88,89,23,26,79,49,55,36]



exports.problem = fs.createReadStream(__dirname + '/problem.txt');
exports.solution = fs.createReadStream(__dirname + '/solution.txt');

exports.verify = verify({ modeReset: true }, function (args, t) {
  var f = require(path.resolve(args[0]));
  // test stream outputs
  var test_i = 0
  var between0And10 = function (x) {
    if (x > 0 && x < 10) return true 
    return false
  }
  var answers = [7, 6, 6, 5]
  // input streams
  var A_stream = Kefir.sequentially(1, sensorA_readings)
  var B_stream = Kefir.sequentially(2, sensorB_readings)
  var s = f(A_stream, B_stream)
  s.log()
  s.onValue(function(x) {
    t.ok(between0And10(x))
    test_i=test_i+1
    if (test_i == 6) t.end()
  })
});
